<UserControl
	x:Class="Anemos.Views.RuleView"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
	xmlns:converters="using:Anemos.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:fa="using:FontAwesome6.Fonts"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:models="using:Anemos.Models"
	mc:Ignorable="d">
	<UserControl.Resources>
		<converters:BoolToVisibilityConverter x:Key="VisibilityConverter" />

		<Style
			x:Key="CloseButton"
			TargetType="Button">
			<Setter Property="Padding" Value="2" />
		</Style>
		<Style
			x:Key="CloseButtonIcon"
			TargetType="FontIcon">
			<Setter Property="FontSize" Value="12" />
		</Style>
	</UserControl.Resources>

	<Border
		Margin="5"
		Padding="5"
		BorderBrush="{ThemeResource PageItemsBorder}"
		BorderThickness="2"
		CornerRadius="5">
		<Grid ColumnSpacing="10">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="200" />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>

			<StackPanel
				Grid.Column="0"
				Orientation="Vertical"
				Spacing="8">
				<controls:DockPanel LastChildFill="True">
					<Button
						controls:DockPanel.Dock="Left"
						Command="{x:Bind ViewModel.RemoveSelfCommand}"
						Style="{StaticResource CloseButton}">
						<Button.Resources>
							<ResourceDictionary>
								<SolidColorBrush
									x:Key="ButtonForegroundPointerOver"
									Color="White" />
								<SolidColorBrush
									x:Key="ButtonBackgroundPointerOver"
									Color="Crimson" />
								<SolidColorBrush
									x:Key="ButtonForegroundPressed"
									Color="White" />
								<SolidColorBrush
									x:Key="ButtonBackgroundPressed"
									Color="DarkRed" />
							</ResourceDictionary>
						</Button.Resources>
						<FontIcon
							Glyph="&#xE8BB;"
							Style="{StaticResource CloseButtonIcon}" />
					</Button>

					<Button
						x:Uid="Rule_AddCondition"
						Padding="2"
						HorizontalAlignment="Right"
						VerticalAlignment="Center">
						<Button.Flyout>
							<Flyout
								x:Name="AddConditionFlyout"
								ShowMode="Standard">
								<Flyout.FlyoutPresenterStyle>
									<Style TargetType="FlyoutPresenter">
										<Setter Property="Padding" Value="0" />
										<Setter Property="CornerRadius" Value="5" />
									</Style>
								</Flyout.FlyoutPresenterStyle>

								<Border
									BorderThickness="2"
									CornerRadius="5">
									<StackPanel Orientation="Vertical">
										<ItemsControl ItemsSource="{x:Bind ViewModel.ConditionTypeNames, Mode=OneWay}">
											<ItemsControl.ItemTemplate>
												<DataTemplate x:DataType="x:String">
													<Button
														HorizontalAlignment="Stretch"
														Background="Transparent"
														BorderThickness="0"
														Click="CloseFlyout"
														CommandParameter="{x:Bind}"
														Content="{x:Bind}" />
												</DataTemplate>
											</ItemsControl.ItemTemplate>
										</ItemsControl>
									</StackPanel>
								</Border>
							</Flyout>
						</Button.Flyout>
					</Button>
				</controls:DockPanel>

				<TextBox Text="{x:Bind ViewModel.Model.Name, Mode=TwoWay}" />

				<controls:DockPanel
					HorizontalAlignment="Stretch"
					LastChildFill="True">
					<fa:FontAwesome
						controls:DockPanel.Dock="Left"
						Foreground="{StaticResource SystemFillColorSuccessBrush}"
						Icon="Solid_Check"
						Visibility="{x:Bind ViewModel.Model.ConditionsSatisfied, Converter={StaticResource VisibilityConverter}, Mode=OneWay}" />
					<fa:FontAwesome
						controls:DockPanel.Dock="Left"
						Foreground="{StaticResource SystemFillColorCriticalBrush}"
						Icon="Solid_Ban"
						Visibility="{x:Bind ViewModel.Model.ConditionsSatisfied, Converter={StaticResource VisibilityConverter}, ConverterParameter=True, Mode=OneWay}" />

					<StackPanel
						controls:DockPanel.Dock="Right"
						Orientation="Horizontal"
						Spacing="5">
						<Button
							VerticalAlignment="Stretch"
							Command="{x:Bind ViewModel.IncreasePriorityCommand}"
							IsEnabled="{x:Bind ViewModel.CanIncreasePriority, Mode=OneWay}"
							ToolTipService.Placement="Mouse">
							<ToolTipService.ToolTip>
								<ToolTip x:Uid="Rule_IncreasePriority" />
							</ToolTipService.ToolTip>
							<FontIcon
								FontSize="10"
								Glyph="&#xE70E;" />
						</Button>
						<Button
							VerticalAlignment="Stretch"
							Command="{x:Bind ViewModel.DecreasePriorityCommand}"
							IsEnabled="{x:Bind ViewModel.CanDecreasePriority, Mode=OneWay}"
							ToolTipService.Placement="Mouse">
							<ToolTipService.ToolTip>
								<ToolTip x:Uid="Rule_DecreasePriority" />
							</ToolTipService.ToolTip>
							<FontIcon
								FontSize="10"
								Glyph="&#xE70D;" />
						</Button>
					</StackPanel>

					<Border />
				</controls:DockPanel>

				<ComboBox
					HorizontalAlignment="Stretch"
					ItemsSource="{x:Bind ViewModel.Profiles, Mode=OneWay}"
					SelectedIndex="{x:Bind ViewModel.SelectedProfileIndex, Mode=TwoWay}">
					<ComboBox.ItemTemplate>
						<DataTemplate x:DataType="models:FanProfile">
							<TextBlock
								Text="{x:Bind Name}"
								TextTrimming="CharacterEllipsis" />
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>

				<ComboBox
					ItemsSource="{x:Bind ViewModel.RuleTypeNames}"
					SelectedIndex="{x:Bind ViewModel.SelectedRuleTypeIndex, Mode=TwoWay}">
					<ComboBox.ItemTemplate>
						<DataTemplate x:DataType="x:String">
							<TextBlock
								Text="{x:Bind}"
								TextTrimming="CharacterEllipsis" />
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
			</StackPanel>

			<ScrollViewer
				Grid.Column="1"
				VerticalAlignment="Stretch"
				Background="{StaticResource CardBackgroundFillColorSecondaryBrush}"
				Style="{StaticResource TraditionalScrollViewerStyle}">
				<ItemsControl ItemsSource="{x:Bind ViewModel.Model.Conditions, Mode=OneWay}">
					<ItemsControl.ItemTemplate>
						<DataTemplate x:DataType="models:RuleConditionBase">
							<Grid HorizontalAlignment="Stretch">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>

								<Button
									Grid.Column="0"
									Margin="4"
									Click="RemoveCondition"
									CommandParameter="{x:Bind}"
									Style="{StaticResource CloseButton}">
									<Button.Resources>
										<ResourceDictionary>
											<SolidColorBrush
												x:Key="ButtonForegroundPointerOver"
												Color="White" />
											<SolidColorBrush
												x:Key="ButtonBackgroundPointerOver"
												Color="Crimson" />
											<SolidColorBrush
												x:Key="ButtonForegroundPressed"
												Color="White" />
											<SolidColorBrush
												x:Key="ButtonBackgroundPressed"
												Color="DarkRed" />
										</ResourceDictionary>
									</Button.Resources>

									<FontIcon
										Glyph="&#xE8BB;"
										Style="{StaticResource CloseButtonIcon}" />
								</Button>

								<Button
									Grid.Column="1"
									Padding="4"
									HorizontalAlignment="Stretch"
									HorizontalContentAlignment="Left"
									Background="Transparent"
									BorderThickness="0"
									Click="OpenEditor"
									CommandParameter="{x:Bind}">
									<TextBlock
										Text="{x:Bind Text, Mode=OneWay}"
										TextTrimming="CharacterEllipsis" />
								</Button>

								<fa:FontAwesome
									Grid.Column="2"
									Margin="5,0"
									Foreground="{StaticResource SystemFillColorSuccessBrush}"
									Icon="Solid_Check"
									Visibility="{x:Bind IsSatisfied, Converter={StaticResource VisibilityConverter}, Mode=OneWay}" />
								<fa:FontAwesome
									Grid.Column="2"
									Margin="5,0"
									Foreground="{StaticResource SystemFillColorCriticalBrush}"
									Icon="Solid_Ban"
									Visibility="{x:Bind IsSatisfied, Converter={StaticResource VisibilityConverter}, ConverterParameter=True, Mode=OneWay}" />
							</Grid>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</ScrollViewer>
		</Grid>
	</Border>
</UserControl>